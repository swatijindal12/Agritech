# DB DESIGN DOCUMENTATION
openapi: 3.0.3
info:
  title: AgriTech API 1.0
  description: |-
    It is a platform/ecosystem for agriculture that builds trust and provides traceability. The platform will leverage blockchain technology to build trust amongst different actors in the system like farmers, buyers, the platform provider and validators.
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
  - url: https://www.swagger.com/api/v1
    description: Production server
tags:
  - name: auth
    description: Everything about authenticating user.
  - name: user
    description: Everything about users.
  - name : farm
    description: Everything about farms.
  - name : agreement
    description: Everything about agreement.

paths:
  # LOGIN PATH
  /login:
    post:
      tags:
        - auth
      summary: Send OTP.
      description: Use mobile number to generate OTP.
      operationId: sendOTP
      parameters:
        - name: mobile_number
          in: Number
          description: The user mobile number to get OTP.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP sent to your number."
        '404':
          description: failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Number not found."
        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again, Internal server error."

  # VERIFY PATH
  /verify:
    post:
      tags:
        - auth
      summary: Verify OTP 
      description: Verify OTP and login into the system.
      operationId: verifyOTP
      parameters:
        - name: mobile_number
          in: Number
          description: The user mobile number on which OTP sent.
          required: true
          schema:
            type: number
        - name: otp
          in: Number
          description: The user mobile number on which OTP sent.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  jwt:
                    type: string
                    example: "sdsdd.fdfersdfdfd.dfdgtrt"

        '404':
          description: failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again."
        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again, Internal server error."
  # LOGOUT PATH
  /logout:
    get:
      tags:
        - auth
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        200:
          description: successful operation


  # ADD USER PATH
  /user:
    post:
      tags:
        - user
      summary: Create a user 
      description: Create a new user for the platform with some role (farmer,buyer,validator).
      operationId: createUser
      parameters:
        - name: ipfs_hash
          in: string
          description: Hash generated from IPFS.
          required: true
          schema:
            type: string
        - name: mobile_number
          in: Number
          description: The user mobile number.
          required: true
          schema:
            type: number
        - name: public_key
          in: string
          description: The user public key of wallet.
          required: true
          schema:
            type: number
        - name: private_key
          in: string
          description: The user private key of wallet.
          required: true
          schema:
            type: number
        - name: role
          in: string
          description: The user private key of wallet.
          required: true
          schema:
            type: string
            default: farmer
            enum:
              - farmer
              - buyer
              - validator

      responses:
        '200':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messsage:
                    type: string
                    example: "User created."

        '404':
          description: failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again, User creation failed."
        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again, Internal server error."

  # ADD FARM
  /farm:
    post:
      tags:
        - farm
      summary: Create a farm 
      description: Create a new farm.
      operationId: createFarm
      parameters:
        - name: user_id
          in: string
          description: User Id of the farmer.
          required: true
          schema:
            type: string
        - name: farmnft_id
          in: string
          description: Farm NFT id.
          required: true
          schema:
            type: string
        - name: ipfs_hash
          in: string
          description: IPFS hash farm data.
          required: true
          schema:
            type: string
        - name: validated_status
          in: boolean
          description: farm is validated or not.
          required: true
          schema:
            type: boolean

      responses:
        '200':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messsage:
                    type: string
                    example: "Farm added."

        '400':
          description: failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again, farm add failed."
        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again, Internal server error."
  # GET LIST OF FARMS
  /farms:
    get:
      tags:
        - farm
      summary: Get a List of farms 
      description: Get a list of farms of a user.
      operationId: getFarm
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  success: 
                    type: boolean
                    example: true
                  results: 
                      type: array
                      items: 
                        $ref: '#/components/schemas/farm'    
        '400':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again,reload page"
        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again,Internal server error."

  # Get agreement
  /agreement:
    get:
      tags:
        - agreement
      summary: Get a List of agreement  
      description: Get a list of agreement of a farm.
      operationId: createAgreement
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  success: 
                    type: boolean
                    example: true
                  results: 
                      type: array
                      items: 
                        $ref: '#/components/schemas/agreement'    
        '400':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again,reload page"
        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again,Internal server error."                  
              

# Create Schema.
components:
  schemas:
    # Schema User.
    user: 
      required:
        - ipfs_hash
        - mobile_number
        - public_key
        - private_key
        - role
      type: object
      properties:
        _id: 
          type: string
          example: ObjectId('674df3hghghsd67sd7')
        ipfs_hash:
          type: string
          example: Qmc8Lwehj67Azj9FNhtSvzVBPy786owDZVoz8gAy7EZaX
        mobile_number:
          type: number
          example: 9123145982
        public_key: 
          type: string
          example: jksdksd878798dhsj3434kjdkdfk34k34jkj
        private_key: 
          type: string
          example: jksdksd878798dhsj3434kjdkdfk34k34jkj
        role:
          type: string
          description: Choose role.
          examples: 
            - farmer
            - buyer
            - validator
          enum: 
            - farmer
            - buyer
            - validator
            - company  
        created_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
        updated_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00 
    # Schema Farm.
    farm: 
      required:
        - ipfsHash
        - userId
        - farmNFTId
        - isValidated
      type: object
      properties:
        _id: 
          type: string
          example: ObjectId('674df3hghghsd67sd7')
        ipfs_hash:
          type: string
          example: Qmc8Lwehj67Azj9FNhtSvzVBPy786owDZVoz8gAy7EZaX
        user_id:
          type: string
          example: ObjectId('674df3hghghsd67sd7') 
        farmnft_id:
          type: string
          example: ObjectId('674df3hghghsd67sd7') 
        validated_status:
          type: boolean
          example: false
        created_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
        updated_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
    # Schema Agreement.
    agreement: 
      required:
        - sellerId
        - buyerID
        - agreementNFTId
        - isSold
        - isAgreementClose
      type: object
      properties:
        _id: 
          type: string
          example: ObjectId('674df3hghghsd67sd7')
        seller_id:
          type: string
          example: ObjectId('893hjddf3hghghsd67s34')
        buyer_id:
          type: string
          example: ObjectId('8994d4df3hghghsd67sd7')
        agreementnft_id:
          type: string
          example: ObjectId('jd84d4df3hghghsd67s7s')
        sold_status: 
          type: boolean
          example: true
        agreementclose_status: 
          type: string
          example: false
        created_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
        updated_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00

        
        
        


    


      

  

