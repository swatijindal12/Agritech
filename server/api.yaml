# DB DESIGN DOCUMENTATION
openapi: 3.0.3
info:
  title: AgriTech API 1.0
  description: |-
    It is a platform/ecosystem for agriculture that builds trust and provides traceability. The platform will leverage blockchain technology to build trust amongst different actors in the system like farmers, buyers, the platform provider and validators.
  contact:
    email: apiteam@agritech.com
  version: "1.0"
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
  - url: https://www.swagger.com/api/v1
    description: Production server
security:
- bearerAuth: [] 
tags:
  - name: auth
    description: Everything about authenticating user.
  - name: user
    description: Everything about users.
  - name : farm
    description: Everything about farms.
  - name : agreement
    description: Everything about agreement.
  - name: dashboard
    description: A dashboard for company.

paths:
  # LOGIN PATH
  /user/login:
    post:
      tags:
        - auth
      summary: Send OTP.
      description: Use mobile number to generate OTP.
      operationId: sendOTP
      parameters:
        - name: mobile_number
          in: Number
          description: The user mobile number to get OTP.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "OTP sent to your number."
                  httpStatus:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null  
        '400':
          description: failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: "failed operation"
                  message:
                    type: string
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null  
        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: "Internal server error"
                  message:
                    type: string
                    example: null
                  httpStatus:
                    type: number
                    example: 500
                  data:
                    type: object
                    example: null  

  # VERIFY PATH
  /user/verify:
    post:
      tags:
        - auth
      summary: Verify OTP 
      description: Verify OTP and login into the system.
      operationId: verifyOTP
      parameters:
        - name: mobile_number
          in: Number
          description: The user mobile number on which OTP sent.
          required: true
          schema:
            type: number
        - name: otp
          in: Number
          description: The user mobile number on which OTP sent.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: null
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties: 
                      jwt:
                        type: string
                        example: "sdsjkdks.sduwiesd.iofdhjsjs" 

        '400':
          description: failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "operation failed,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null
        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null
  # LOGOUT PATH
  /user/logout:
    get:
      tags:
        - auth
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        200:
          description: successful operation


  # ADD USER PATH
  /register/user:
    post:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Create a user 
      description: Create a new user for the platform with some role (farmer,buyer,validator).
      operationId: createUser
      parameters:
        - name: ipfs_hash
          in: string
          description: Hash generated from IPFS.
          required: true
          schema:
            type: string
        - name: mobile_number
          in: Number
          description: The user mobile number.
          required: true
          schema:
            type: number
        - name: public_key
          in: string
          description: The user public key of wallet.
          required: true
          schema:
            type: number
        - name: private_key
          in: string
          description: The user private key of wallet.
          required: true
          schema:
            type: number
        - name: role
          in: string
          description: The user private key of wallet.
          required: true
          schema:
            type: string
            default: farmer
            enum:
              - farmer
              - buyer
              - validator

      responses:
        '201':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: null
                  messsage:
                    type: string
                    example: "User created."
                  httpStatus:
                    type: number
                    example: 201
                  data: 
                    type: object
                    example: null


        '400':
          description: failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "user exist, try again"
                  message:
                    type: string
                    example: "Try again, User creation failed."
        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Try again, Internal server error."

  # ADD FARM
  /farmer/farm:
    post:
      security:
        - bearerAuth: []
      tags:
        - farm
      summary: Create a farm 
      description: Create a new farm.
      operationId: createFarm
      parameters:
        - name: user_id
          in: string
          description: User Id of the farmer.
          required: true
          schema:
            type: string
        - name: farmnft_id
          in: string
          description: Farm NFT id.
          required: true
          schema:
            type: string
        - name: ipfs_hash
          in: string
          description: IPFS hash farm data.
          required: true
          schema:
            type: string
        - name: validated_status
          in: boolean
          description: farm is validated or not.
          required: true
          schema:
            type: boolean

      responses:
        '201':
          description: successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: null
                  messsage:
                    type: string
                    example: "Farm added"
                  httpStatus:
                    type: number
                    example: 201
                  data:
                    type: object
                    example: null

        '400':
          description: failed operation.
          content:
            application/json:
               schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "farm add failed, try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null
        '403':
          description: failed operation.
          content:
            application/json:
               schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 403
                  data:
                    type: object
                    example: null

        '500':
          description:  failed operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error, try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 500
                  data:
                    type: object
                    example: null
  # GET LIST OF FARMS
  /farmer/farms:
    get:
      security:
        - bearerAuth: []
      tags:
        - farm
      summary: Get a List of farms 
      description: Get a list of farms of a user.
      operationId: getFarm
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: null
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 200
                  data:
                    type: array
                    items: 
                        $ref: '#/components/schemas/farm'
        '403':
          description: failed operation.
          content:
            application/json:
               schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 403
                  data:
                    type: object
                    example: null

        '404':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    example: "not found,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    example: "internal server error,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null

  # GET AGREEMENT
  /agreement/all:
    get:
      security:
        - bearerAuth: []
      tags:
        - agreement
      summary: Get a List of agreement  
      description: Get a list of agreement of a farm.
      operationId: getAgreement
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: object
                    example: null
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 200
                  data: 
                      type: array
                      items: 
                        $ref: '#/components/schemas/agreement'    
        '400':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "not found,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: array
                    example: []
        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "internal server error,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 500
                  data:
                    type: array
                    example: []
  # SELL AGREEMENT
  /agreement/sell:
    get:
      security:
        - bearerAuth: []
      tags:
        - agreement
      summary: sell an agreement  
      description: sell an agreement of a farm [blockchain].
      operationId: sellAgreement
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "ready to be sold"
                  httpStatus:
                    type: number
                    example: 200
                  data: 
                      type: object
                      example: null   
        '403':
          description: failed operation.
          content:
            application/json:
               schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 403
                  data:
                    type: object
                    example: null
        
        '400':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "operation failed,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null
        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "internal server error,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 500
                  data:
                    type: object
                    example: null
  # BUY AGREEMENT
  /agreement/buy:
    get:
      security:
        - bearerAuth: []
      tags:
        - agreement
      summary: buy an agreement  
      description: buy an agreement of a farm [blockchain].
      operationId: buyAgreement
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "bought succesfully"
                  httpStatus:
                    type: number
                    example: 200
                  data: 
                      type: object
                      example: null   
        '400':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "bought failed,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null
        '403':
          description: failed operation.
          content:
            application/json:
               schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 403
                  data:
                    type: object
                    example: null

        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "internal server error,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 500
                  data:
                    type: object
                    example: null
  # CLOSE AGREEMENT
  /agreement/completed:
    get:
      security:
        - bearerAuth: []
      tags:
        - agreement
      summary: Close an agreement  
      description: close an agreement of a farm [blockchain].
      operationId: closeAgreement
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "Agreement closed successfully"
                  httpStatus:
                    type: number
                    example: 200
                  data: 
                      type: object
                      example: null  
        '400':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "Agreement closed failed,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null
        '403':
          description: failed operation.
          content:
            application/json:
               schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 403
                  data:
                    type: object
                    example: null

        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "internal server error,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 500
                  data:
                    type: object
                    example: null
  # DASHBOARD OF COMPANY
  /profile/dashboard:
    get:
      security:
        - bearerAuth: []
      tags:
        - dashboard
      summary: Dashboard for company 
      description: Get total farm, agreement details.
      operationId: getDashboard
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: object
                    example: null
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 200
                  data: 
                      type: object
                      example: null  
        '403':
          description: failed operation.
          content:
            application/json:
               schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized,try again"
                  messsage:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 403
                  data:
                    type: object
                    example: null
                    
        '400':
          description: failed operation.
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "not found,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 400
                  data:
                    type: object
                    example: null
        '500':
          description:  failed operation.
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error:
                    type: string
                    example: "internal server error,try again"
                  message:
                    type: object
                    example: null
                  httpStatus:
                    type: number
                    example: 500
                  data:
                    type: object
                    example: null
                    
              

# Create Schema.
components:
  schemas:
    # Schema User.
    user: 
      required:
        - ipfs_hash
        - mobile_number
        - public_key
        - private_key
        - role
      type: object
      properties:
        _id: 
          type: string
          example: ObjectId('674df3hghghsd67sd7')
        ipfs_hash:
          type: string
          example: Qmc8Lwehj67Azj9FNhtSvzVBPy786owDZVoz8gAy7EZaX
        mobile_number:
          type: number
          example: 9123145982
        public_key: 
          type: string
          example: jksdksd878798dhsj3434kjdkdfk34k34jkj
        private_key: 
          type: string
          example: jksdksd878798dhsj3434kjdkdfk34k34jkj
        role:
          type: string
          description: Choose role.
          examples: 
            - farmer
            - buyer
            - validator
          enum: 
            - farmer
            - buyer
            - validator
            - company  
        created_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
        updated_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00 
    # Schema Farm.
    farm: 
      required:
        - ipfs_hash
        - user_id
        - farmnft_id
        - validated_status
      type: object
      properties:
        _id: 
          type: string
          example: ObjectId('674df3hghghsd67sd7')
        ipfs_hash:
          type: string
          example: Qmc8Lwehj67Azj9FNhtSvzVBPy786owDZVoz8gAy7EZaX
        user_id:
          type: string
          example: ObjectId('674df3hghghsd67sd7') 
        farmnft_id:
          type: string
          example: ObjectId('674df3hghghsd67sd7') 
        validated_status:
          type: boolean
          example: false
        created_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
        updated_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
    # Schema Agreement.
    agreement: 
      required:
        - seller_id
        - buyer_id
        - agreementnft_id
        - sold_status
        - agreementclose_status
      type: object
      properties:
        _id: 
          type: string
          example: ObjectId('674df3hghghsd67sd7')
        seller_id:
          type: string
          example: ObjectId('893hjddf3hghghsd67s34')
        buyer_id:
          type: string
          example: ObjectId('8994d4df3hghghsd67sd7')
        agreementnft_id:
          type: string
          example: ObjectId('jd84d4df3hghghsd67s7s')
        sold_status: 
          type: boolean
          example: true
        agreementclose_status: 
          type: string
          example: false
        created_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
        updated_at:
          type: string
          example: 2022-12-15T05:32:17.528+00:00
    response:
     type: object
     required:
      - error
      - message
      - httpStatus
      - data
     properties:
      error:
       type: string
       example: 'Id not found'
      message:
          type: string
          example: 'User created successfully'
      httpStatus:
          type: number
          example: 201
      data:
          type: object
          example: { 'id': 1, 'name': 'Test' }
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

        
        
        


    


      

  

